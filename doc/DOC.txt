DOC DIRECTORIO TVC
==================

Manual

Proyecto realizado en Laravel 10 -version LTS-
... Vite, TailwindCSS, InfyOm + AdminLTE

# Usuarios predeterminados

user: admin@tvc.com
role: admin
pass: TVC#adm_2025!
            
user: agent@tvc.com
role: agent
pass: TVC_#Agent_2025!

---// SECCION TECNICA

Lo usuarios son creados en el seeder 'UserSeeder.php'

Nota:

Se ha permitido desproter la ruta /personal a la que accede el agente 
desde el Middleware Authenticate seteando el false el valor del flag 'personal_route_protected'
en el archivo el archivo 'config/app.php'

/*
    ./config/app.php
*/

# Proteccion de ruta /personal
'personal_route_protected' => false,


# Instalacion

- Copiar todo el Proyecto

    Deben incluirse la carpeta node_modules/ asi como vendors/

- Copiar la carpeta public/ a la raiz del proyecto
- Configurar la base de datos, usuario y password de la misma en archivo .env
- Ejecutar migraciones y seeders:

    php artisan migrate
    php artisan db:seed

- Crear enlaces simbolico a la carpeta storage:

    php artisan storage:link

Ya logueado como Admin es posible correr desde el navegador comandos:

    GET /admin/tasks/copy-public
    Copia la carpeta public/ a la raiz del proyecto.

    GET /admin/tasks/db/migrate
    Ejecuta las migraciones en la base de datos.

    GET /admin/tasks/db/seed
    Ejecuta los seeders de la base de datos.

    GET /admin/tasks/db/rollback
    Realiza un rollback de las migraciones.

    GET /admin/tasks/db/reset
    Ejecuta el reset de migraciones.

    GET /admin/tasks/db/fresh
    Ejecuta el comando migrate:fresh en la base de datos.

    GET /admin/tasks/cache/clear
    Limpia la configuración, vistas y caché de la aplicación.

## Generacion de modelos

    https://github.com/reliese/laravel

## InfyOm

Generadores corridos:

para las vistas del Dashboard:

    php artisan infyom:scaffold Area --fromTable --table=areas
    php artisan infyom:scaffold Brand --fromTable --table=brands
    php artisan infyom:scaffold Certification --fromTable --table=certifications
    php artisan infyom:scaffold LinesFamily --fromTable --table=lines_families
    php artisan infyom:scaffold Position --fromTable --table=positions
    php artisan infyom:scaffold Professional --fromTable --table=professionals
    php artisan infyom:scaffold ProfessionalArea --fromTable --table=professional_area
    php artisan infyom:scaffold ProfessionalBrand --fromTable --table=professional_brand
    php artisan infyom:scaffold ProfessionalCertification --fromTable --table=professional_certification
    php artisan infyom:scaffold ProfessionalLineFamily --fromTable --table=professional_line_family
    php artisan infyom:scaffold ProfessionalSkill --fromTable --table=professional_skill
    php artisan infyom:scaffold State --fromTable --table=states

para los endpoints de la API

    php artisan infyom:api Area --fromTable --table=areas
    php artisan infyom:api Brand --fromTable --table=brands
    php artisan infyom:api Certification --fromTable --table=certifications
    php artisan infyom:api LinesFamily --fromTable --table=lines_families
    php artisan infyom:api Position --fromTable --table=positions
    php artisan infyom:api Professional --fromTable --table=professionals
    php artisan infyom:api ProfessionalArea --fromTable --table=professional_area
    php artisan infyom:api ProfessionalBrand --fromTable --table=professional_brand
    php artisan infyom:api ProfessionalCertification --fromTable --table=professional_certification
    php artisan infyom:api ProfessionalLineFamily --fromTable --table=professional_line_family
    php artisan infyom:api ProfessionalSkill --fromTable --table=professional_skill
    php artisan infyom:api State --fromTable --table=states

# Vite

Se usa Vite asi que luego de cualquier cambio en el Dashboard puede ser necesario hacer:

    php artisan view:clear
    npm run build

Luego de hacer el "build" puede ser necesario hacer:

    cp public/build/.vite/manifest.json  cp public/build/manifest.json

y borrar el archivo "hot" en produccion

y ... copiar el manifest.json a su ubicacion correcta porque Vite lo genera en la ubicacion errornea:

cp public\build\.vite\manifest.json public\build\manifest.json


# API

Hay una API Rest basica con endpoints como:

api/professionals
api/areas
etc.


